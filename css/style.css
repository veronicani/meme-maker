/*  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
);*/

/* || General Styles */
:root {
  --clr-background: #4D29B4;
  --clr-primary: #E692F3;
  --clr-accent:#44B8F9;
  --clr-wht: #FFFFFF;
  --clr-shadow: rgb(0 0 0 / .3); /* this syntax for rgb() now supports alpha, refer codeguide.co > colors)*/
  
  --font-size: 16px;
  --border: 3px solid var(--clr-background);
  --border-radius: 1em;
}

* {
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-content: center; 
  justify-content: space-between;
  margin: 0;
  color: var(--clr-wht);
  font-size: var(--font-size);
  font-family:'Inter', sans-serif;
  background-color: var(--clr-background);
}

/* || Typography */
h1 {
  font-family: 'Bungee Inline', sans-serif;
  font-size: 2.25rem;
  text-align: center;
  margin-block: .25em;
  /* -webkit-text-stroke: .5px var(--clr-background);  */
  /* using 8-axis shadow to mimic creating an outside stroke */ 
  text-shadow:
  -4px -4px 0 var(--clr-background),
   0   -4px 0 var(--clr-background),
   4px -4px 0 var(--clr-background),
   4px  0   0 var(--clr-background),
   4px  4px 0 var(--clr-background),
   0    4px 0 var(--clr-background),
  -4px  4px 0 var(--clr-background),
  -4px  0   0 var(--clr-background);
}

h2 {
  font-family: 'Bungee', sans-serif;
  font-size: 1.5rem;
  text-align: center;
  margin-block: .25rem;
}

@media screen and (min-width: 375px){
  h1 {
    font-size: 3rem; 
  }
}
@media screen and (min-width: 768px){
  h1 {
    font-size: 4rem; 
  }
}
@media screen and (min-width: 992px) {
  h1 {
    margin: 1rem;
  }
  h2 {
    margin: 1rem; 
  }
}
/* || Utilities -- for styling choices you want to apply to a lot of elements << ref MDN*/
.button {
  /* padding here should not scale with text https://www.joshwcomeau.com/css/surprising-truth-about-pixels-and-accessibility/*/
  max-width: 100%;
  padding-block: 10px; 
  padding-inline: 30px;
  font-family: 'Bungee Inline', sans-serif;
  font-size: 1.5rem;
  color: var(--clr-wht);
  background-color: var(--clr-accent);
  border: var(--border);
  border-radius: var(--border-radius);
  box-shadow: 2px 5px 5px var(--clr-shadow);
}

.button:active { 
  transform: scale(0.98); 
  /* Scaling button to 0.98 to its original size */ 
  box-shadow: 2px 2px 2px var(--clr-shadow); 
  /* Lowering the shadow */ 
}
/* https://css-tricks.com/html-inputs-and-labels-a-love-story/ - for hiding labels but maintain accessibility.
/* For non-natively-focusable elements. For natively focusable elements */
/* Use .visually-hidden:not(:focus):not(:active) */
.visually-hidden {
  border-width: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  height: 1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important;
}

.hide {
  display: none;
}

/* || Header */
header {
  position: fixed;
  /* top: 0; */
  z-index: 3; /* places it above memes in z-index */
  display: flex;
  flex-direction: column;
  width: 100%;
  /* margin-top: -1rem; */
  margin-bottom: 1rem; 
  padding: .5rem; /* I want the padding for the header to scale with the text*/
  background-color: var(--clr-primary);
  border: var(--border); 
  border-color: var(--clr-accent);
  border-bottom-left-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
}

@media screen and (min-width: 768px) {
  header {
    padding-inline: 5rem; 
  }
}

@media screen and (min-width: 992px) {
  header {
    padding-inline: 16rem; 
  }
}

form {
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.form__row {
  margin-block: .25rem; /* vertical margins*/ 
}

.form__input {
  width: 100%;
  margin-top: .5rem;
  padding: 10px; 
  border: var(--border);
}

.form__input::placeholder {
  font-style: italic;
}

.form__row .button {
  display: flex;
  justify-items: center;
  margin-inline: auto;
  margin-block: 1rem; 
}

/* || Main */
main {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start; /* prevents items from stretching down */
  justify-content: center;
  gap: 30px;
  margin: 1rem;
  margin-top: 31rem;
}

.main--header-collapse {
  margin-top: 8rem;  
}

@media screen and (min-width: 768px) {
  .main--header-collapse {
    margin-top: 10rem; 
  }
}

/* || Meme */
.meme__wrapper {
  position: relative;
  max-width: 100%;
  margin: 0;
  background-color: black;
  border-radius: var(--border-radius);
  box-shadow: 5px 5px 5px var(--clr-shadow);

}

@media screen and (min-width: 768px) {
  .meme__wrapper {
    max-width: 45%;
  }
}

@media screen and (min-width: 992px) {
  .meme__wrapper {
    max-width: 30%;
  }
}

.meme__wrapper > img {
  width: 100%;
  display: block; 
  /* setting a display: prevents pixel from showing up at the bottom */
  border-radius: var(--border-radius);
  
}

.meme__text {
  position: absolute;
  z-index: 1; 
  width: 100%;
  margin-block: 5px;
  text-align: center;
  font-family: 'Anton', sans-serif;
  font-size: 3em;
  color: var(--clr-wht);
  text-shadow: -2px -2px 0 #000, 2px -2px 0 #000, -2px 2px 0 #000, 2px 2px 0 #000;

}

.meme__text--top {
  top: 0;
}

.meme__text--bottom {
  bottom: 0; 
}
  
/* For centering absolute elements - https://thoughtbot.com/blog/positioning#position

https://stackoverflow.com/questions/8508275/how-to-center-a-position-absolute-element*/

.fa-trash-can {
  display: block;
  position: absolute;
  z-index: 2; 
  top: 50%;  /* position the top  edge of the element at the middle of the parent */
  left: 50%; /* position the left edge of the element at the middle of the parent */
  transform: translate(-50%, -50%); /* This is a shorthand of translateX(-50%) and translateY(-50%),  % values on translate() function is relative to the size of element itself*/
  opacity: 0%;
}

/* Hover state for memes */
.meme__wrapper:hover {
  transform: translate(-2px, -7px);
  box-shadow: 5px 7px 5px var(--clr-shadow);
  transition: all 0.2s ease-in-out;
}

.meme__wrapper:hover .meme__text,
.meme__wrapper:hover img {
  opacity: 50%;
  transition: all 0.2s ease-in-out;
}

.meme__wrapper:hover .fa-trash-can {
  display: block;
  opacity: 100%;
  transition: all 0.2s ease-in-out; 
}

/* || Footer */

footer {
  text-align: center;
}